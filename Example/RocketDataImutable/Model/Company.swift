//
//  Company.swift
//  ModelGen
//
//  Generated by [ModelGen]: https://github.com/hebertialmeida/ModelGen
//  Copyright Â© 2017 ModelGen. All rights reserved.
//

import Unbox
import RocketData

/// Definition of a Company
public struct Company: BaseModel, Equatable {

    // MARK: Instance Variables

    public let subdomain: String
    public let name: String
    public let logo: URL?
    public let id: Int

    // MARK: - Initializers

    public init(subdomain: String, name: String, logo: URL?, id: Int) {
        self.subdomain = subdomain
        self.name = name
        self.logo = logo
        self.id = id
    }

    public init(unboxer: Unboxer) throws {
        self.subdomain = try unboxer.unbox(key: "subdomain")
        self.name = try unboxer.unbox(key: "name")
        self.logo =  unboxer.unbox(key: "logo")
        self.id = try unboxer.unbox(key: "id")
    }

    // MARK: - Rocket Data Model

    public var modelIdentifier: String? {
        return "Company:\(id)"
    }

    public func map(_ transform: (Model) -> Model?) -> Company? {
        return self
    }

    public func forEach(_ visit: (Model) -> Void) {
    }

    // MARK: - Builder

    public struct Builder {
        public var subdomain: String
        public var name: String
        public var logo: URL?
        public var id: Int

        public init(copy: Company) {
            subdomain = copy.subdomain
            name = copy.name
            logo = copy.logo
            id = copy.id
        }

        public func build() -> Company {
            return Company(subdomain: subdomain, name: name, logo: logo, id: id)
        }
    }
}

// MARK: - Equatable

public func == (lhs: Company, rhs: Company) -> Bool {
    guard lhs.subdomain == rhs.subdomain else { return false }
    guard lhs.name == rhs.name else { return false }
    guard lhs.logo == rhs.logo else { return false }
    guard lhs.id == rhs.id else { return false }
    return true
}